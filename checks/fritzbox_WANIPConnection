#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

# Author: Marcel Arentz <gdspd_you@open-one.de>

def parse_fritzbox_WANIPConnection(info):
    parsed = {}
    for line in info:
        parsed[line[0].replace('New', '')] = line[1]
    return parsed


def inventory_fritzbox_WANIPConnection(parsed):
    pprint.pprint(parsed)
    if int(parsed.get('Enable', 0)) == 1:
        return [(None, {})]


def check_fritzbox_WANIPConnection(_no_item, _no_params, parsed):
    dns_list = parsed.get('DNSServers', [])
    connection_type = parsed.get('ConnectionType', 'Could not get any connection type')
    connection_status = parsed.get('ConnectionStatus', 'Could not get any connection status')
    connection_uptime = parsed.get('Uptime', 'Could not get uptime')
    ext_address = parsed.get('ExternalIPAddress', None)

    if ext_address:
        yield 0, 'External IP: %s' % ext_address

    if not connection_uptime.startswith('Could not get'):
        uptime = int(connection_uptime)
        yield check_uptime_seconds(None, uptime)

    for value in [dns_list, connection_type, connection_status]:
        if value.startswith('Could not get'):
            yield 3, value


check_info['fritzbox_WANIPConnection'] = {
        'parse_function': parse_fritzbox_WANIPConnection,
        'inventory_function': inventory_fritzbox_WANIPConnection,
        'check_function': check_fritzbox_WANIPConnection,
        'service_description': 'FritzBox WAN Connection',
        'includes': ['uptime.include'],
        }
